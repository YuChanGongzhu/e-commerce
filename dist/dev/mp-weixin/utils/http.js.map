{"version":3,"file":"http.js","sources":["../../../../__vite-browser-external:path","../../../../src/utils/http.ts"],"sourcesContent":["export default new Proxy({}, {\n  get(_, key) {\n    throw new Error(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code.  See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n  }\n})","import { useMemberStore } from \"@/stores\"\r\nimport { resolve } from \"path\"\r\n\r\nconst baseUrl = 'https://pcapi-xiaotuxian-front-devtest.itheima.net/'\r\n\r\n//拦截器\r\nconst httpInterceptor = {\r\n    invoke(options: UniApp.RequestOptions) {\r\n        //地址\r\n        if (!options.url.startsWith(\"http\")) {\r\n            options.url = baseUrl + options.url\r\n        }\r\n        //超时时间\r\n        options.timeout = 10000\r\n        //请求头\r\n        options.header = {\r\n            ...options.header,\r\n            'source-client': \"miniapp\"\r\n        }\r\n        //token\r\n        const memberStore = useMemberStore()\r\n        const token = memberStore.profile?.token\r\n        if (token) {\r\n            options.header.Authorization = token\r\n        }\r\n\r\n        // console.log(\"options:\", options) //???\r\n    }\r\n}\r\nuni.addInterceptor('request', httpInterceptor)\r\nuni.addInterceptor('uploadFile', httpInterceptor)\r\n\r\ninterface Data<T> {\r\n    code: string,\r\n    msg: string,\r\n    result: T\r\n}\r\nexport const http = <T>(options: UniApp.RequestOptions) => {\r\n    return new Promise<Data<T>>((resolve, reject) => {\r\n        uni.request({\r\n            ...options,\r\n            success(res) {\r\n                if (res.statusCode >= 200 && res.statusCode < 300) {\r\n                    resolve(res.data as Data<T>)\r\n                }\r\n                else if (res.statusCode === 401) {\r\n                    const memberStore = useMemberStore()\r\n                    memberStore.clearProfile()\r\n                    uni.navigateTo({ url: '/pages/login/login' })\r\n                    reject(res)\r\n                } else {\r\n                    uni.showToast({\r\n                        title: (res.data as Data<T>).msg || '请求错误',\r\n                        icon: 'none',\r\n                    })\r\n                }\r\n            },\r\n            fail(err) {\r\n                uni.showToast({\r\n                    title: '网络错误，换个网络',\r\n                    icon: 'none',\r\n                })\r\n                reject(err)\r\n            }\r\n        })\r\n    })\r\n}"],"names":["useMemberStore","uni","resolve"],"mappings":";;;;AAAe,IAAI,MAAM,CAAA,GAAI;AAAA,EAC3B,IAAI,GAAG,KAAK;AACV,UAAM,IAAI,MAAM,sFAAsF,GAAG,qIAAqI;AAAA,EAC/O;AACH,CAAC;ACDD,MAAM,UAAU;AAGhB,MAAM,kBAAkB;AAAA,EACpB,OAAO,SAAgC;;AAEnC,QAAI,CAAC,QAAQ,IAAI,WAAW,MAAM,GAAG;AACzB,cAAA,MAAM,UAAU,QAAQ;AAAA,IACpC;AAEA,YAAQ,UAAU;AAElB,YAAQ,SAAS;AAAA,MACb,GAAG,QAAQ;AAAA,MACX,iBAAiB;AAAA,IAAA;AAGrB,UAAM,cAAcA,sBAAAA;AACd,UAAA,SAAQ,iBAAY,YAAZ,mBAAqB;AACnC,QAAI,OAAO;AACP,cAAQ,OAAO,gBAAgB;AAAA,IACnC;AAAA,EAGJ;AACJ;AACAC,cAAAA,MAAI,eAAe,WAAW,eAAe;AAC7CA,cAAAA,MAAI,eAAe,cAAc,eAAe;AAOnC,MAAA,OAAO,CAAI,YAAmC;AACvD,SAAO,IAAI,QAAiB,CAACC,UAAS,WAAW;AAC7CD,kBAAAA,MAAI,QAAQ;AAAA,MACR,GAAG;AAAA,MACH,QAAQ,KAAK;AACT,YAAI,IAAI,cAAc,OAAO,IAAI,aAAa,KAAK;AAC/CC,mBAAQ,IAAI,IAAe;AAAA,QAAA,WAEtB,IAAI,eAAe,KAAK;AAC7B,gBAAM,cAAcF,sBAAAA;AACpB,sBAAY,aAAa;AACzBC,wBAAAA,MAAI,WAAW,EAAE,KAAK,qBAAsB,CAAA;AAC5C,iBAAO,GAAG;AAAA,QAAA,OACP;AACHA,wBAAAA,MAAI,UAAU;AAAA,YACV,OAAQ,IAAI,KAAiB,OAAO;AAAA,YACpC,MAAM;AAAA,UAAA,CACT;AAAA,QACL;AAAA,MACJ;AAAA,MACA,KAAK,KAAK;AACNA,sBAAAA,MAAI,UAAU;AAAA,UACV,OAAO;AAAA,UACP,MAAM;AAAA,QAAA,CACT;AACD,eAAO,GAAG;AAAA,MACd;AAAA,IAAA,CACH;AAAA,EAAA,CACJ;AACL;;"}